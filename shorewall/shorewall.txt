我一直在用ShoreWall做防火牆，我看到有人在問ShoreWall

我把我以前在網上看到的文件發出來（聯接已不可找，對作者報欠）
在使用中如有問題可一起討論一下！

防火牆與ShoreWall

前言
近年來，網路安全的課題愈來愈受重視，但是還是有愈來愈多的企業主或是員工受到非法入侵的傷害，為什麼會有這種現象呢？因為很多人都還抱持著不會那麼剛好的發生在自已身上的心態，而近年來的攻擊形態的改變，讓更多的使用者措手不及，自已突然成了受害者，連修復的能力也沒有，根據調查，每年美國因受網路攻擊的損失高達 100億美元，每年入侵事件的回報的次數愈來愈多，以下是CERT統計至2002年底為止，入侵事件的次數。


年份　1995　1996　1997　1998　1999　2000　2001　2002
數量　171　 345 　311　 262　 417　 1090　2437　4129　

而2003年的前二季也高達了1993次之多，顯示在美國這種高網路化的國家，網路安全的事件也是層出不窮，再加上近年來恐佈攻擊行動也有部份是由網路來進行資訊的傳送，或者是發動攤瘓型的攻擊行動，造成全球經濟的大損失。有鑑於此，各國政府的資訊管理部門都開始重視資訊安全，美國FBI與美國電腦安全協會CSI曾經指出，包含大型的美國企業、財務機構、大學，及政府單位等機構中，曾有百分之九十曾偵測到有遭受過安全侵害，大概有百分之七十的單位遭到比病毒更嚴重的侵害，幾乎一半的單位宣稱網路入侵、攻擊的行為，讓他們產生財務的損失，攻擊的手法各式各樣，包含了內部的濫用及外部的攻擊。

以下介紹幾個比較常見的攻擊手法給讀者們參考一下：
1.掃瞄 (Scanning)
通常在cracker或是hacker開始要進行入侵的時候，會事先將情報搜集好，比方說使用snmp此類的port偵測工具，或是利用ping來測試等，當他們收集了愈多的情報，當然就愈有把握入侵使用者的系統了。

2.阻絕服務 (Denial of Service,DoS)
這一類的攻擊幾乎都會造成伺服器的當機，使得主機無法提供服務，攻擊者可以利用持續傳送不完整的封包方式，讓伺服器無?回應，自然其他的服務就受到影響，比如說利用郵件炸彈之類的。

3.分散式阻絕服務 (Distributed denial of service,DDoS)
和DoS很像，只不過DoS是由單台主機進行攻擊，而DDoS則是利用網路上被入侵的主機，對同一台服務器進行DoS攻擊，使得伺服器無法承受主機所能處理的程序而當機。

4.竊取 (sniffing)
這一類的攻擊通常都是從客戶端及伺服器端或是伺服器對伺服器的通訊中擷取資訊的，攻擊者通常都會抓取TCP/IP協定的封包，將之重組或解碼後就可以得到使用者的密碼或者是重要的資訊等，一般市面上賣的sniffer或者是fluke之類的網管軟體即是其中一類，像Linux中的snort也有類似sniffer的功能，若是有心人士在伺服器或是區域網路中安裝此類的軟體，那麼網路就可能會出現資料被盜用的危機。

5.劫持 (Hijacking)
這是另一種在兩個點在通訊中進行攻擊的手法，通常是兩個通訊中的連線，由攻擊的第三者對其中之一的機器進行攻擊，當其中之一的機器被攤瘓後，第三者就偽裝成為其中的一個機器，繼續與另一台機器進行通訊，這樣就可以接受另一台機器的資訊。

6.實體 (Physical)
實體部份其實是非常容易就達成的，試想，假設公司的MIS人員疏忽了實體線路的重要性的話，那麼當公司的有心人士要竊取公司的重要資料，則可以利用很多方式，比如說利用數據機傳送，或者可以在一個區段中接一個hub出來盜取資訊(可用VLAN來防護)，或者是直接到主機旁進行破壞，這些都是有可能發生的，所以資訊系統的實體管理，也是不容忽視的。

7.系統漏洞 (Bug)
沒有一個作業系統或是程序是絕對沒有錯誤的，比如Linux上的Sendmail套件，Windows的IIS套件，都是惡名昭彰的，不管任何的系統，一定都會有問題，攻擊者就是利用這些個漏洞來進行入侵的動作，管理者應該時時注意漏洞的更新，減少被入侵的機會。

8.後門 (back door)
這類事件的發生多半伴隨著系統漏洞來產生，有時也是程式開發人員在程式中遺留下特殊的密碼，可以直接進入系統來取得管理者的權限，大部份的後門都是不為人知的，但一旦被發現可是都很嚴重的。

9.社交工程 (Social engineering)
可以靠欺騙的手段來進行，也可以利用職務之便來接近，這些都是利用社交工程來進行取得對方資料的手段，例如商業間碟等。

假設您想要百分之百防堵以上所有的攻擊型態的話，很抱歉，除非您把伺服器的電源線給拔了，不然絕對無法做到99%的安全，那還有1%跑到那去了？注意最後一項，就是社交工程。

當然，筆者並不是叫大家把伺服器的服務都給停掉，那不就天下大亂了嗎，在此篇電子報的主題中所要介紹的，是防火牆(Firewall)的部份，並簡單的介紹一下防火牆能夠達到的功能。

防火牆的功能及種類
防火牆是網路安全的第一道防線，很多組織都會在伺服器或者是路由器上建立防火牆的機制，並設定哪些通訊可以通過，哪些則不行，防火牆的目的在於關閉一些不必要的通訊，以減少被入侵的機會，但是它卻不能避免所有的網路攻擊行為，防火牆主要分成三種，分類如下：
1.封包過濾(packet-filtering firewall)
2.應用層防火牆(application firewall)
3.線路層防火牆(circuit-level firewall)

現今在企業中主要的應用為NAT(Network Address Translatino,網路位址轉換)、VPN(Virtual Private Network，虛擬私有網路)及Proxy(代理伺服器)，如果要以實體的裝置來區分的話，那麼又可以分為硬體式防火牆和軟體式防火牆。

顧名思義，硬體式防火牆就是專門用來進行防火牆功能的機器，一般來說此類產品都是有特別的硬體規格，並且提供制式的規格讓使用者選用，如果要另加功能(比方說是VPN)及使用者人數的話，那麼就要另加費用，通常此類型的防火牆，最少都要三、四萬元以上，而且都有人數的限制，台灣較常見的就是NetScreen及SonicWall這兩家。

而軟體式防火牆就是一套套裝的軟體，一般來說就是與一台伺服器或是PC搭配，配置於企業網路的最外層，直接保護企業網路不直接的與網際網路接觸，這類型的防火牆分成二個部份，一是商業軟體，常見的有微軟的ISA Server、Check Point的Firewall-1，而另外就是OpenSource的解決方案，常見的就是大家熟知的Iptables，另外還有一套就是今日的主角--ShoreWall。

ShoreWall 簡介
ShoreWall是一套功能強大的防火牆軟體，是一套很棒的 Netfilter 整合工具，它把iptables, ip, tc...等一堆常見的netfilter 指令都整合起來，把原本複雜難懂的的指令集通通變成設定檔，再搭配一些規則的語法，可以讓Linux的系統管理人員不再需要去查詢一堆很難懂的指令，只要會設定規則，並且搭配ShoreWall的設定檔，就可以輕易的完成那些商業防火牆套件的功能。

另外，在使用ShoreWall的時候也具有很高的彈性，管理者可以在設定檔中依喜好設定各種規則，因此，ShoreWall這套軟體可以用在一台同時擁有路由器/防火牆/閘道器的Linux伺服器中，而且幾乎netfilter所支援的功能，ShoreWall都可以做到。

除了將指令整合到設定檔之外，ShoreWall也可以定義介面的代號，比方說一個內部網路192.168.1.0/24就可以定義為一個loc的變數，那麼就可以用很簡單的變數來代表內部網路的實際設定，這樣子的話，設定的規則就會更加的淺顯易懂，詳細的設定會在以後的電子報內容進行說明。

ShoreWall 功能說明
除了設定上的便利性之外，ShoreWall也支援以下的功能，列表如下所示：

1. 使用Netfilter的連線記錄的能力，用在標準封包過濾的功能上。
2. 可以使用在路由器/防火牆/閘道器的應用上。
3. 可以完整的自訂設定檔的內容。
4. 沒有限制網路介面的數目(ISA Server 2000只允許三個網路介面)。
5. 除了文字介面外，在Webmin1.060版之後，也可以使用圖形介面來管理。
6. 支援許多位置管理/路由協定，列表如下。
Masquerading/SNAT
Port Forwarding(DNAT)
One-to-One NAT
Proxy ARP
NETMAP(核心2.4版本需修補或是在版本2.6以上)
7. 可以將單一的IP或是整個子網路列入黑名單中。
8. 可以使用指令來啟動、停止或是清除防火牆規則。
9. 支援狀態監控，針對較特別的封包發出提示的訊息。
10.支援VPN，列表如下。
IPSEC
GRE
IPIP
Open VPN Tunnels
PPTP
11.可支援頻寬整合的機制，但是需要外加的設置。
12.支援各種GNU/Linux的套件。
13.支援MAC(Media Access Control)位址的確認機制。
14.流量統計
15.支援Bridge(核心2.4版本需修補或是在版本2.6以上)

結論
總體來說，ShoreWall可以解決許多Linux網管人員心中的痛苦，因為管理一個Linux的防火牆是一件很惱人的事情，就算規則寫的再好，也是有一大串的指令必需自已親自撰寫，就算寫好了，在修正的時候也是件大工程，如果是小規模的就還好，但是如果同時擁有數個介面..然後每個介面都要寫上數十行的指令的話，那麼就不是件簡單的事了，重點是，使用ShoreWall這套Open Source的防火牆軟體，完全不用受制於商業套件的限制，這對企業主來說，也是一個很不錯的選擇。

下載及安裝
1、下載
ShoreWall的官方網址為http://www.shorewall.net，在安裝之前先要去下載它的原始碼程式，位址在http://www.shorewall.net/download.htm這個頁面，您可以選擇一個Mirror站台來下載，筆者是選擇USA的站點來下載，進入畫面之後，選擇一個您想要使用的版本，筆者在撰寫此編文件時，最新的版本已經出到了2.1.5，它的更新速度非常的快速，每隔一、二星期就會有新的版本出現，不過沒有關係，shorewall在更新的同時，也可以直接進行版本的更新，在稍後筆者會進行介紹。

在點選進入2.1.5（2004/8/19）版之後，應該會看見兩種版本，一種是RPM形式的套件，另一個則是tarball形式的原始碼，選擇一個您要使用的版本下載即可，接下來進行到安裝的步驟。

2、tarball安裝過程
將shorewall-2.1.5.gz上傳到主機上，並且使用下列的指令進行安裝即可：
# tar zxvf shorewall-2.1.5.gz
# cd shorewall-2.1.5
# ./install.sh

3、RPM安裝過程
將shorewall-2.1.5-1.noarch.rpm上傳到主機上，並且使用下列的指令進行安裝即可：
# rpm -ivh shorewall-2.1.5-1.noarch.rpm

4、反安裝過程
Tarball：
請在原來的安裝目錄中輸入以下的指令：
# ./uninstall.sh
這個指令會將shorewall的所有設定檔給移除掉。

RPM：
# rpm -e shorewall

5、升級方式
Tarball：
# tar zxvf 最新版本編號.gz
# cd 最新版本編號
# ./install.sh
# shorewall check
# shorewall restart

RPM：
# rpm -Uvh --nodeps 最新版本編號.rpm
#shorewall check
#shorewall restart

以上兩個方式就是升級shorewall的方法。

編輯設定檔
安裝完畢後，必需先要設定各個設定檔才能啟動shorewall，在這邊請要特別注意，shorewall不是一個daemon的程式，它是一個載入指令的套件，所以請別指望使用ps -ax這類的指令來查詢它的行程，接下來的部份就分別說明各個設定檔的功能及格式。

1、/etc/shorewall/shorewall.conf
shorewall.conf這個設定檔是整個軟體配置中最重要的一個檔案，裡面有許多的設定，若是搞錯的話，很可能會造成shorewall的啟動失敗或是運作不正常，筆者在此就介紹幾個較常更改的設定參數給讀者參考：

STARTUP_ENABLED=Yes

預設是為No，如果您決定要使用shorewall來管理您的防火牆的話，那麼強烈的建議您將這個選項設定為Yes。

LOGFILE=/var/log/messages

設定記錄檔的位置，預設的記錄檔是messages這個檔案，您也可以指定另外的檔案，以區分防火牆及一般訊息，便於除錯時較能快速掌握狀況。

LOGNEWNOTSYN=info

設定記錄檔的等級，一般來說shorewall的記錄是由syslog這隻程式來進行，一共有八級，而shorewall預設的記錄等級為info，您可以參考/etc/syslog.conf來瞭解其他等級的記錄內容為何。

CONFIG_PATH=/etc/shorewall:/usr/share/shorewall

設定shorewall的所有配置檔所存放的目錄位置為何，如果您的設定檔不是放在這個位置的話，請自行修改至正確的路徑。

FW=fw

預設的防火牆介面名稱，在shorewall中，會內定一個防火牆的Zone名稱，這個名稱不需要在/etc/shorewall/zones中定義，直接可以在各個設定檔中使用。

IP_FORWARDING=On

預設是打開的，這個選項代表是開啟IP Forward的功能，如果您的Linux主機是獨立型的主機，並不需要使用到NAT或者是DNAT等功能的話，那麼這個選項就可以把它給關閉。

完成設定後就可以存檔離開了。

接著下來筆者就以一個最簡單的網路架構來做為設定的例子，以一台Linux主機為主要單位，有兩張乙太網路卡，eth0是對外部的網路卡，而eth1則是對內的網路卡，內部區域網路透過NAT連結到外部網路，而這台Linux主機同時具備有簡易防火牆的功能，針對下面的各個設定檔案做說明。

2、/etc/shorewall/zones
在zones這個檔案中，您可以定義您的網路區域代碼，限制在5個或5個字元之下，總共有三個欄位，分別說明如下：

ZONE：定義的名稱，限制在5個或5個字元以下。

DISPLAY：這個介面所顯示的名稱，通常和ZONE設定是一樣的。

COMMENTS：對這個介面的簡略說明。

那麼在這個例子中，筆者就定義了二個介面，在zones的設定內容如下所示：

#ZONE DISPLAY COMMENTS
loc Local Localhost
net Net Internet
#LAST LINE - ADD YOUR ENTRIES ABOVE THIS ONE - DO NOT REMOVE

其中loc就是對內的網路介面，而net就是對外部網路的網路介面。

3、/etc/shorewall/interfaces
接下來就要建立網路介面及ZONE的對照表了，前面說過eth0是對網際網路的介面，而eth1是對內部區域網路的介面，那麼設定的內容如下所示：

#ZONE INTERFACE BROADCAST OPTIONS
net eth0 xxx.xxx.xxx.128
loc eth1 192.168.1.255 dhcp
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE

其中第一個欄位就是對應到/etc/shorewall/zones的ZONE名稱，而第二個欄位就是對應到在Linux系統中的介面名稱，在這個例子中，eth0是對外部網路的介面，所以對應到net，而eth1是對內部區域網路的介面，所以對應到loc，第三個欄位是設定該網路介面的BROADCAST，如果是C class的話，就是設定成x.x.x.255，以此類推，筆者不再此詳述，對外的介面， ISP公司都會提供一個設定的清單，只要照著上面的記錄填寫即可，而最後一個OPTIPNS的欄位就是這個介面要用什麼樣的功能，比方說在這個例子中，eth1介面還要負責DHCP配發的動作，所以就在OPTIONS的欄位上加入dhcp的記錄，其他的功能請參照interfaces的註解，在此不做太多的說明。

4、/etc/shorewall/policy
這個檔案是設定整個大方向的防火牆政策，通常建議較安全的方案是先將所有由外而內的政策都設定成為拒絕，然後再一個一個的打開可用的port號，所以policy的設定內容如下：

#SOURCE DEST POLICY LOG LIMIT:BURST
loc net ACCEPT
net all DROP info
all all REJECT info
#LAST LINE -- DO NOT REMOVE

其中第一行是允許由內部區域網路連到外部網路，第二行是將所有外部來的封包都丟棄，並記錄到記錄檔中，第三行的功能也是一樣。

5、/etc/shorewall/masq
這個檔案是設定讓內部的虛擬IP可以偽造真實的IP連線出去，也就是NAT的功能，設定內容如下：

#INTERFACE SUBNET ADDRESS
eth0 eth1 xxx.xxx.xxx.xxx
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE

其中INTERFACE是對外的網路卡，而SUBNET則是對內部虛擬網路的網路卡，最後的欄位ADDRESS則是對外網卡的真實IP，輸入完後就存檔離開。

最後再重新啟動shorewall的防火牆，請依照下列指令重新啟動

# shorewall check
# shorewall restart
# chkconfig --level 2345 shorewall on
完成！

結論
怎麼樣，很簡單吧！雖然這樣子就完成了最基本的防火牆建置，所有由外部對內部的服務全部都被關閉，只讓內部的虛擬IP以NAT的方式連線到外部網路，這樣子就算是成功的建立一座防火牆了，可是對於大部份的企業來說，這樣的設定還是不夠的，所以筆者在下一期的電子報中還會為各位讀者介紹更進階的使用，讓各位讀者能夠輕易的就架設起自已的防火牆。

進階元件
上一篇電子報的內容中，筆者只介紹了幾個一定用到的檔案來做說明，其實shorewall還有很多其他的設定檔，在此就再做一次說明，根據不同的需求，還有下面幾個常用的設定檔案：

1、params
這是用來設定shell變數的一個檔案，這個檔案有點像是C語言中的include功能一樣，把include進來的檔案的變數放到現在這個檔案中，只是在shorewall的設定檔中，並不需要再使用include來引入，params這個檔案的目的在於將所有相關的變數都統一設定在裡面，當您的規則全都設定好了之後，只要變更params的內容就可以套用在別的網路狀態，管理起來非常的方便，以下就是一個例子：

在/etc/shorewall/params中的設定：

NET_IF=eth0 NET_BCAST=130.252.100.255
NET_OPTIONS=blacklist,norfc1918

在/etc/shorewall/interfaces中的設定：

net $NET_IF $NET_BCAST $NET_OPTIONS

這樣子的話，其他的規則就都可以使用變數的方式來寫，所以說規則只要寫一次，就可以重覆的使用囉！

2、rules
這個檔案是整個shorewall的重點檔案，有看過前一篇電子報的讀者應該還記得一個叫做policy的檔案吧？policy檔案的目的在於制定整個防火牆政策的大方向，比方說loc這個介面對dmz這個介面的政策是REJECT或是ACCEPT等，通常由防火牆外至內部網路的政策都是全部先設定為關閉的，當然也有全設定為開放再一個個關起來的，不過安全的防火牆政策應該是屬於前者，而rules這個檔案則是在制定一些【例外】的狀況，比方說，您的防火牆將所有的port都給關閉了，以至於從外不能由ssh連結進來，那麼這個時候就可以在rules這個檔案中來定義，它的格式如下所示：

#ACTION SOURCE DEST PROTO DEST SOURCE ORIGINAL
# PORT PORT(S) DEST
DNAT fw loc:192.168.1.3 tcp ssh,http

以上的設定是指轉送所有fw防火牆介面的ssh及http的請求至loc的介面，而IP為192.168.1.3的機器上。

在這個檔案中有幾個較常用到的欄位，分別說明如下，其他較少用的欄位在此筆者就不多加說明了：
　
欄位名稱        設定項目        說明
ACTION        ACCEPT        允許這個連線的要求。
        ACCEPT+        和ACCETP一樣，但是會排除之後有關REDIRECT-及DNAT- 的規則。
        DROP        忽略這個連線的請求。
        REJECT        不接受這連線的請求，並回覆一個icmp-unreachable或是RST的封包給對方。
        DNAT        轉送這個封包至另一個系統(或是其他的port號)。
        DNAT-        只有進階的使用才會用到，這和DNAT的規則一樣，但是只產生DNAT的iptables的規則而且也不是ACCEPT成對的規則。
        REDIRECT        重導這個連線的請求到local的另一個埠號中。
        REDIRECT-        只有進階的使用才會用到，這和REDIRECT的規則一樣，但是只產生REDIRECT的iptables的規則而且也不是ACCEPT成對的規則。
        CONTINUE        專家模式專用，對於這裡所定義的來源及目的端的請求就會被pass通過。
        LOG        簡單的記錄封包資訊
        QUEUE        將這個封包佇放在使用者的應用程式中。
        <action>;        定義在/etc/shorewall/actions或是/usr/share/shorewall/actions.std中的動作。
SOURCE        　        來源位址，格式可設定以下幾種樣式：loc、net(在zones檔案中所定義的介面)192.168.1.1(IP格式)192.168.1.0/24(子網路格式)loc:192.168.1.1loc:192.168.1.0/24loc:192.168.1.1,192.168.1.2loc: ~00-A0-C9-15-39-78(MAC Address)
DEST        　        目的位址，設定的方式和SOURCE一樣，但是如果SOURCE設定為all時，則有以下的限制：並不允許使用MAC Address在DNAT的規則中只允許使用IP Address不可同時使用interface及IP
PROTO        　        必需是tcp、udp、icmp或是all，或者是數字。
DEST PORT(S)        　        目的端的埠號，可用數字或名稱，在設定這個欄位時，可以用逗號(,)來建立多個埠號清單，也可以用一整個範圍的埠號(1024:2048->;意思是從1024到2048之中所有的埠號)來建立清單。
CLIENT PORT(S)        　        客戶端的埠號，這個欄位可以忽略掉。
3、nat
這個檔案主要是用來定義one-to-one型式的NAT，所謂的"one-to-one"是代表說一個真實IP將所有的服務都轉向內部的一個虛擬IP，所以通常是一個真實的IP就【只能】指向一個虛擬的IP，這通常是用在當這台NAT主機是只有跑防火牆服務，然後所有提供外部服務的主機都是藏在內部虛擬IP的狀況下，在一般的情況下比較少用到這個檔案，如果想要使用forward或是DNAT的功能的話，就不能使用這個檔案來設定，必需去設定rules這個檔案才行，有關於nat的設定內容如下所示：

#EXTERNAL INTERFACE INTERNAL ALL LOCAL
# INTERFACES
x.x.x.x eth0 192.168.1.23
　
EXTERNAL        設定此台伺服器所要對外的【真實IP】。
INTERFACE        設定此台伺服器的對外網路網卡介面名稱。
INTERNAL        設定想將此真實IP轉向內部的虛擬IP位址。
ALL INTERFACES        如果不想同時套用到其他的網路介面時，請在此設定為no，如果為空白的話，就只會套用到這個介面。
LOCAL        如果這個選項設定為Yes或yes，還有ALL INTERFACES也被設定為Yes或yes的話，那麼由EXTERNAL傳送至INTERNAL的封包就會被限制在內部，要開啟這個功能的話，核心版本必需要在2.4.19以上，並且要確認開啟CONFIG_IP_NF_NAT_LOCAL的功能，而且iptables的版本要在1.2.6a以上才行。
4、masq
這個檔案是用來架設一般所謂的NAT伺服器，和前一節的one-to-one的NAT不大相同，這邊所設定的通常是將內部的虛擬IP偽裝成真實的對外IP，讓內部的虛擬IP一樣可以在真實的環境中使用，當然也有使用在別的狀況中，但大部份使用的狀況都是前者，masq設定的內容如下所示：

#INTERFACE SUBNET ADDRESS PROTO PORT(S) IPSEC
eth0 eth1 192.168.1.98
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE
　
INTERFACE        設定負責對外部網路的介面名稱。
SUBNET        設定負責對內部網路的介面名稱。
ADDRESS        設定負責對外部網路的IP位址，這個選項可以不設定。
PROTO        在此您可以設定的內容為/etc/protocols的服務內容。
PORT(S)        如果在PROTO的部份設定為TCP或是UDP的話，那麼在這個選項中就可以設定埠號，或者是服務名稱了。
IPSEC        設定是否要對這個網路介面的連線進行加密，如果是空白，就是不需要，如果是yes的話，就會進行加密。
範例：
eth0 eth1 206.124.146.177 tcp smtp
eth0 eth1 206.124.146.176

以上的設定內容是代表所有由eth1的tcp協定的smtp封包，都會把IP的標頭設定為206.124.146.177，然後由eth0送出去，然後其餘的封包都是將封包的標頭設定為206.124.146.176，然後由eth0送出去。

5、modules
這個檔案會將所有Iptables所需要的模組都載入進去，預設的內容如下所示：

loadmodule ip_tables
loadmodule iptable_filter
loadmodule ip_conntrack
loadmodule ip_conntrack_ftp
loadmodule ip_conntrack_tftp
loadmodule ip_conntrack_irc
loadmodule iptable_nat
loadmodule ip_nat_ftp
loadmodule ip_nat_tftp
loadmodule ip_nat_irc

如果您有其他的模組的話，只要加入modules這個檔案即可。

6、blacklist
這個檔案是設定連線的黑名單，您可以在這個檔案中限制某些網路位址的連線動作，利用這個檔案，您可以輕易的把一些不受歡迎，或是受限制的IP都擋下來，不讓他們使用特定的服務，blacklist的設定內容如下：

ADDRESS/SUBNET PROTOCOL PORT
　
ADDRESS/SUBNET        設定所要限制的網路位址，或是子網路及MAC Address，格式分別為下列三種：網路位址：192.168.1.10子網路：192.168.1.0/24MAC Address：~00-A0-C9-15-39-78
PROTOCOL        在此您可以設定的內容為/etc/protocols的服務內容，這個欄位可以選擇不設定。
PORT        如果在PROTOCOL的部份設定為TCP或是UDP的話，那麼在這個選項中就可以設定埠號，或者是服務名稱了，這個欄位可以選擇不設定。
範例：
192.0.2.126 udp 53

上面這行所表示的是封鎖由IP 192.0.2.126所請求的DNS查詢服務。

進階應用
1、開放服務
由於筆者在一開始的政策就是將所有由外而內的服務都給封鎖掉了，所以現在要一個一個的打開，在此筆者所要開放的服務為HTTP、SMTP、POP3、SSH、DNS、還有一個port 10000的Webmin的服務，那麼在rules的設定就會如下所示：

ACTION SOURCE DEST PROTO DEST PORT

ACCEPT net fw tcp http
ACCEPT loc fw tcp http

ACCEPT net fw tcp smtp
ACCEPT loc fw tcp smtp

ACCEPT net fw tcp pop3
ACCEPC loc fw tcp pop3

ACCEPT net fw tcp ssh
ACCEPT loc fw tcp ssh

ACCEPT net fw tcp dns
ACCEPT loc fw tcp dns
ACCEPT net fw udp dns
ACCEPT loc fw udp dns

ACCEPT net fw tcp 10000
ACCEPT loc fw tcp 10000

以上所有的服務因為都是在這台防火牆中，所以DEST的欄位都是設定為fw這個介面，另外因為分別有對內及對外的介面，所以每一個服務都會設定兩次，不過也有另外一種設定的方式，如下所示：

Shorewall預設就有幾個已經寫好的動作就放在/usr/share/shorewall目錄中，所有的動作都是以action.Allow服務名稱或是action.Drop服務名稱，或是action.Reject服務名稱來命名，當然您也可以設定其他的檔案名稱來使用，例如：action.AllowSSH，這些檔案可以自已命名，自成一個規則來取代原有的ACTION欄位，設定內容如下所示：

ACTION SOURCE DEST

AllowSSH net fw
AllowSSH loc fw

AllowWeb net fw
AllowWeb loc fw

其中前面的名稱就是在/usr/share/shorewall目錄中所定義的action.[檔案名稱]，其中檔案名稱就是在ACTION欄位中出現的名稱，只要在該檔案中定義好所有的動作，那麼在rules檔案中，您只需要定義來源及位址即可，這樣子在管理的時候，會非常的方便。

2、MSN處理
筆者相信有很多mis都想擋掉一些奇怪的服務，當然shorewall也可以做到這樣的功能，在此筆者就以MSN來做範例，首先必需先要知道MSN的連結埠為哪一個，筆者查詢到的MSN是1863，而MSN連結的網站位址則是為gateway.messenger.hotmail.com。

首先筆者先擋掉gateway.messenger.hotmail.com的所有tcp連結，請在rules的檔案中加入以下的記錄：

DROP loc net:gateway.messenger.hotmail.com tcp -

接著再擋掉連結到任何位址的1863埠，請在rules加入以下的記錄：

DROP loc all tcp 1863

這樣子就可以擋掉大部份msn連結的服務了，但是其實這個很好破解，只要在msn的選項中，指定使用proxy伺服器就可以破解了，除非您公司自行架設proxy來管理，或是使用應用層的防火牆，否則其實這樣也只能擋下一般的使用者，這個設定就給大家參考一下囉。

結論
其實shorewall在一開始預設的設定中，就提供了系統管理者許多的彈性設定，只要稍微了解一下iptables的設定原理，就可以很輕易的利用shorewall來達成原來一大堆指令才能夠完成的動作，其實他的功能非常的多，只是限於篇幅，筆者沒辦法一次說的太多，相信許多讀者都想要試看看倒底有多好用囉！雖然目前筆者介紹shorewall還是使用文字介面，但是其實在Webmin的模組中，已經有了圖形介面的管理程式囉，這樣子的話，使用起來會更加的順手。

前言
在前面三期的晟鑫科技電子報的內容中，筆者都針對了Sorewall這套功能強大的防火牆軟體進行了功能、安裝及使用的說明，也許已經有很多的讀者都已經感覺到這套軟體是非常的實用，而且易於管理，比起IPTABLE繁雜的語法，Shorewall真的是為大家簡化了不少的東西，對防火牆新手而言，設定一個有規模的規則已經不再是天方夜譚，而對沙場老將來說，多了一個好用的工具簡直是如虎添翼，那麼，也許也有讀者會問，Shorewall是否也有圖形介面，能讓使用者能夠更方便的就建立防火牆的規則呢？筆者的答案是【有的】，而且它就是Webmin，使用Webmin內附的介面，就可以輕易的設定Shorewall的防火牆。
設定環境變數
由於Webmin是一套功能非常強大的Linux圖形介面管理軟體，所以它的使用者非常的多，幾乎每一台Linux主機上面都會安裝著這一套管理系統(實際上很多廠商都會搭配Webmin來管理自已出廠的Linux系統)，但是因為筆者今日的主軸並不在如何安裝Webmin，所以在此就省略了安裝的步驟，沒安裝過的讀者可以自行在Google的搜尋列上查詢，這年頭在網路上連槍都找的到了，應該是沒有什麼找不到的了。

在登入Webmin的畫面之後，由於預設就已經有了Shorewall的模組了，所以只要直接點選【網路】，就可以看到【ShoreWall Firewall】的選項了，接著下來再點選【Shorewall Fireall】的圖示，就可以進到整個設定的畫面了。

因為一開始並未初始化Shorewall的設置，所以會出現初始的設定畫面，如果讀者有按照筆者的安裝過程來進行的話，那麼請依照以下的設定值來設定：

Shorewall configuration directory請填寫 /etc/shorewall
Path to shorewall command請填寫 shorewall

設定完畢之後，請按下【儲存】鍵，畫面就會直接跳到主要設定畫面，這個畫面就是整個Shorewall的設定介面，如此就完成了在Webmin設定使用Shorewall功能的步驟了。

使用圖形介面
在這個畫面中讀者應該可以看到，Shorewall的主要設定都是放置在第一排中，第二排的圖示中只有masq的部份比較常使用到，其他的部份因為一般的使用者較不常用到，所以筆者就不再進行介紹，只針對先前電子報的幾個例子進行設定的說明，其他的部份就請讀者自行測試囉，畢竟好的工具都給大家了，相信懂得前幾篇電子報的設定，在圖型的介面中更應該是得心應手才是！

zones
點選Zones的圖示之後，會進入到建立規則的畫面，在這個畫面中讀者會看見先前所設定的介面名稱，如果要建立新的介面的話，請按下【Add a New Network Zone】，接著下來會再看到zones的設定介面：

在這個設定的介面中，請直接輸入該介面的ID、顯示名稱及描述，在筆者的範例中，再新增一個介面的ID為net2，而它的顯示名稱為NET2，描述為Second Net Interface，設定完成後請按下【建立】鍵，會出現新的記錄的話，就代表設定成功了。

相信讀者會發現到右邊都會有上下方向的箭頭，Move那欄是表示可以將介面的順序做移動，Add那欄則是表是要新增規則在這條規則的上面或是下面。

interface
在定義完zones之後，接著下來就要為各個zones定義真實的網路介面，點入interface的圖示之後，會看到設定的畫面：

這個介面會和zones的介面非常的類似，同樣的，若要定一個interface的話，請按下【Add a new Network interface】，會出現設定畫面。

在這個設定中，Interface是要指定【真實】的網路介面，而Zone name則是要選則在Zones設定中的【ID】名稱，而Broadcast address則是設定這個Interface的網路遮罩，如果點選【Automatic】的話，系統會自動偵測，而最後的Options部份，則是視該Interface有提供何種功能時，就把它選起來，在此例中筆者是選擇dhcp的部份，設定完成後，按下【建立】後，就成功了。

policy
在定義完所有的介面之後，就要開始設定大方向的政策了，在前一期的電子報中有提到，一般安全的政策都是要將所有由外而內的規則都設定為【關閉】，到時候再將要用的規則一一的【打開】，當然您也可以不按照這個方式，不過筆者是以前者的方式做為基礎，安全性會比較高，請按下policy的按鍵，進入設定畫面。

同樣的，如果要新增一個新的介面政策，請按下【Add a new default policy】，在這個畫面中，筆者是要設定所有從NET2介面來的請求，到任何的介面都是Drop的，所以在Source zone的來源介面中是選擇【NET2】，而Destination zone的目的介面是選擇【Any】，policy政策是訂為【Drop】丟棄，而記錄的層級，筆者在此訂定為info，而流量則是無限制，設定完成後，按下【建立】即可。

rules
定義完介面的預設政策之後，接著下來就是要訂定一些規則了，在此您可以開放一些協定，使它能夠通過這個防火牆進行服務，要訂定規則，請先在設定的畫面中點選rules的連結圖示，進入到設定的畫面。

畫面上的規則都是之前筆者在前一篇的電子報內容中就定義好的，現在以SMTP協定為例子，如果要讓SMTP的請求能夠通過防火牆的話，請點選畫面中的【Add a new firewall rule】，會出現設定畫面：

Action是填寫若符合這條規則時，會做什麼動作，在此筆者是設定ACCEPT接受，Source zone則是選擇來源的介面名稱，由於Net是對外部網路的介面，所以就設定為來源，Destionation zone or port則是設定目標的介面或是port，在此筆者是設定Firewall為目標介面，Protocol則是設定協定，在此是設定為TCP，最後就是設定來源的port和目標port，來源是Any，目的port則是SMTP的25，這整個的規則是指定，【任何由Net介面來到Firewall介面的SMTP請求封包都接受】，設定完成後再按下【儲存】鍵即可。

因為剛才是設定由外而內的介面，如果Local內部網路也需要使用此台防火牆上的SMTP的服務的話，那麼也要開放給內路網路，設定的畫面如下，大致的規則就是【任何由Local介面來到Firewall介面的SMTP請求封包都接受】。

設定完成後一樣請按下【建立】鍵即可。

重新啟動
將防火牆的設定設好之後，就可以重新啟動Shorewall防火牆的規則了，請在設定的主畫面中，按下【Start Firewall】或是【Restart Firewall】的按鍵，過程中如果有錯誤的話，畫面會出現失敗的訊息，不過這個時候要注意！如果防火牆設定錯誤的話，很可能導致您無法由遠端連結至主機中！這點需要多加注意。

結論
相信有許多讀者看到有圖形介面的Firewall設定一定都非常的興奮，雖然好用，可是筆者還是要提醒各位，在Linux下的防火牆雖然功能非常多，但是還是需要使用文字介面的方式來定義會比較詳細，如果您只需要一個簡易的防火牆，那筆者相信使用Webmin的方式就綽綽有餘了，如果您是個武林高手，那麼筆者也不敢在此賣弄，只是這套圖形介面的防火牆管理程式，或許還可以滿足大部份使用者的需求，您說是吧！


shorewall 企业防火墙的完美实现
源码:

=================== 这篇文章绝对原创，作者：xjdong (Andy_xjdong ) ===============
===================        如需转载，请注明出自 LinuxSir.org      ===============

相信大家一定很想自己做一个企业级应用得防火墙，看到大家在论坛上常常问到类似得问题，现在我将我自己身边得一个防火墙企业级应用实例共享出来，希望能帮到需要帮助得朋友。

第一篇：网络接入情况

现在很多企业有的是用专线接入，有的是用ADSL 接入，但最终结果都是一样，就是在互联网上有一个公网IP（或者一个网段）得Route 到你得网关服务器上或者接入路由器上。 好了，知道了这点我就来说一下互联网得接入这一部分，我以专线接入为例子：

如图：
源码:



                                         Route A
                                      ( Internet or ISP  )
                                          /(192.168.5.2/255.255.255.252)
                                         /
                                      /\/
                                     /  
                                    / (IP:192.168.5.1/255.255.255.252)
                                 (Route B)
                                    | (IP 211.111.111.1/255.255.255.0)
                                    |
                                    |_____ (局域网)


当你是专线接入得时候，一般都会有一个专线接入单，上面会有如下相关信息：

1：你得IP地址范围
2：用户端接入IP，以及局端IP

从上图中我们可以看出：
1：ISP分配给你得是一个C类公网地址
2：用户端得接入IP 是 192.168.5.1，局端IP 是 192.168.5.2

好了，下面是我要重点说得了，很多人以为在一个防火墙得外网接口上一定得绑定公网IP，其实这是一个错误得认识，其实只要有 Route 信息，你就可以上互联网。怎么以上面得图为例子，在 ISP 商得路由器那头，就是绑定 192.168.5.2 那个路由器一定有一个 Route 信息是这样得：
ip route 211.111.111.0/24 via 192.168.5.1

通常得做法就是像如图一样在Route B 得以太网口处帮定一个公网IP 211.111.111.1 ，然后大家以这个为网关上网，通常会先接入防火墙，然后后面接局域网用户，如图：

源码:

                                          Route A
                                      ( Internet or ISP  )
                                          /(192.168.5.2/255.255.255.252)
                                         /
                                      /\/
                                     /  
                                    / (IP:192.168.5.1/255.255.255.252)
                                 (Route B)
                                    | (IP 211.111.111.1/255.255.255.0)
                                    |
                                    |                                       
                                    | (211.111.111.2/24)
                               |----------|
                               | Firewall |
                               |----------|
                   (10.1.2.0/24)/        \(10.1.1.0/24)
                               /          \
                              /            \
                             /              \  
             (局域网 A) ____/                \_____ (局域网 B)     
            
这是一个很典型得企业应用，我想我说得没错吧，但是我觉得这里面有几个不好得地方：

1：就是公网IP不能很好得管理，在 Firewall 和 Route B 之间是通过公网IP 连接得，比如通过交换机连接，这样如果有人在交换机上接一个计算机自己随意绑定公网IP 就可以上网了。
2：这是一个C类得IP ，在Firewall 上需要绑定很多公网IP ，才能使用这些IP ，这样管理有很多弊端。

好了，说了这么多，下面引入正题，就是分享一下我得防火墙得实际解决方案。
第二篇：网络结构得设计

对于一个C类得公网IP 我们可以重新设计一个网络拓扑：
方案一：就是不对C类网段分段，还是用一个网段，如图：
源码:


                                          Route A
                                      ( Internet or ISP  )
                                          /(192.168.5.2/255.255.255.252)
                                         /
                                      /\/
                                     /  
                                    / (IP:192.168.5.1/255.255.255.252)
                                 (Route B)
                                    | (IP 192.168.1.1/255.255.255.252)
                                    |
                                    |                                       
                                    | (192.168.1.2/255.255.255.252)
                               |----------|
                               | Firewall |
                               |----------|
                   (10.1.1.1/24)/        \(10.1.2.1/24)
                               /          \
                              /            \
                             /              \  
             (局域网 A) ____/                \_____ (局域网 B  DMZ 服务器区)      
  


注意： 在 Route B 上需要添加一个静态路由, ip route 211.111.111.0 255.255.255.0 192.168.1.2

好了，这样 Firewall 就可以完全控制和分配这 254 个公网IP 了

方案二：就是对C类网段分段，分成两个公网IP网段，有两个防火墙如图：
源码:


                                              Route A
                                         ( Internet or ISP  )
                                             /(192.168.5.2/255.255.255.252)
                                            /
                                         /\/
                                        /  
                                       / (IP:192.168.5.1/255.255.255.252)
                                  |----------|
                                  | Route B  |
                                  |----------|
                                       |(IP 192.168.1.1/255.255.255.24
                                       |
                                 /------------\
(IP 192.168.1.2/255.255.255.24/              \ (IP 192.168.1.3/255.255.255.24
                    |-----------|          |-----------|
                    | Firewall A|          | Firewall B|
                    |-----------|          |-----------|                        
                      /                              \  
      (局域网 A) ____/                                \_____ (局域网 B)               

      
      在 Route B 上添加两条静态路由：

        ip route 211.111.111.0   255.255.255.128 192.168.1.2
        ip route 211.111.111.128 255.255.255.128 192.168.1.3
      

这样一来，我们就将一个 C类得公网IP 拆分成了两个：
Firewall A 得IP 范围是211.111.111.1-127
Firewall B 得IP 范围是211.111.111.129-254

好了，网络设计好了，下面我就以 方案一 我来讲如何配置防火墙

第三篇 防火墙得实现

我选用的平台是：

Redhat 8.0 + Shorewall 1.4.8 (其实就是基于iptables)， 有三块网卡，以方案一为例。

安装好 Redhat 8.0 ,并装好三块网卡后，
在http://slovakia.shorewall.net/pub/s....8-1.noarch.rpm下载 shorewall 的rpm 包（或者 tar 包都可以）

一：安装
rpm -ivh shorewall-1.4.8-1.noarch.rpm
二：配置
shorewall 得所有配置文件都在 /etc/shorewall 下面，好了我将详细得讲解如何配置 shorewall
这里我们假设 DMZ区域有如下一些的服务器：
源码:

mail server:     10.1.2.2/24      公网地址：211.111.111.2
pptp vpn server: 10.1.2.3/24      公网地址：211.111.111.3
dns  server：　　10.1.2.4/24      公网地址：211.111.111.4
http server:     10.1.2.5/24      公网地址：211.111.111.5

在 /etc/shorewall 可以看到有很多配置文件:
(我只讲我们要用到的配置文件，其它得很少用到，大家可以自己去看帮助，很好理解得)

zones (定义防火墙得区域)
interfaces （定义接口）
masq (定义伪装IP)
policy （定义默认策略）
rules （定义防火墙规则）

下面是各个配置文件的内容
源码:


cat /etc/shorewall/zones:
================================================
wan        Internet         Internet
dmz        DMZ              Dmz
lan        Lan              Lan
================================================

cat /etc/shorewall/interfaces
================================================
wan     eth0    detect
lan     eth1    detect
dmz     eth2    detect
================================================

cat /etc/shorewall/masq
================================================
eth0    192.168.1.2/32          211.111.111.1         #----- Firwall To Internet
eth0    10.1.1.0/24             211.111.111.1         #----- Lan A To Internet
eth0    10.1.2.2/32                211.111.111.2         #----- mail server To Internet
eth0    10.1.2.3/32                211.111.111.3         #----- pptp server To Internet
eth0    10.1.2.4/32                211.111.111.4         #----- dns server To Internet
eth0    10.1.2.5/32                211.111.111.5         #----- http server To Internet
================================================

cat /etc/shorewall/policy
================================================
fw      all     ACCEPT      # Firewall 可以任意访问所有区域，包括互联网
lan     wan     ACCEPT      # Lan A 可以任意访问互联网
dmz     wan     ACCEPT      # DMZ 服务器可以任意访问互联网
lan     dmz     ACCEPT      # Lan A 可以任意访问和管理DMZ服务器区

wan     all     DROP        # 互联网不能随意访问内部网络和DMZ
all     all     REJECT
================================================

cat /etc/shorewall/rules
================================================

#---------------------- Internet To mail Server -------------------------------

DNAT    wan     dmz:10.1.2.2         tcp    smtp    -       211.111.111.2
DNAT    wan     dmz:10.1.2.2         tcp    POP3    -       211.111.111.2

#---------------------- Internet To PPTP Server -------------------------------

DNAT    wan     dmz:10.1.2.3         tcp    1723    -       211.111.111.3
DNAT    wan     dmz:10.1.2.3         47      -      -       211.111.111.3

#---------------------- Internet To DNS Server -------------------------------

DNAT    wan     dmz:10.1.2.4         tcp    53      -       211.111.111.4
DNAT    wan     dmz:10.1.2.4         udp    53      -       211.111.111.4

#---------------------- Internet To http Server -------------------------------

DNAT    wan     dmz:10.1.2.5         tcp    http      -       211.111.111.5

================================================

好了，防火墙都配置好了，现在防火墙的结果如下：
源码:


Lan A 的用户     10.1.1.0/24      的用户全部伪装成 211.111.111.1 去访问互联网
mail server:     10.1.2.2/32      以公网地址：211.111.111.2 访问互联网
pptp vpn server: 10.1.2.3/32      以公网地址：211.111.111.3 访问互联网
dns  server：　　10.1.2.4/32      以公网地址：211.111.111.4 访问互联网
http server:     10.1.2.5/32      以公网地址：211.111.111.5 访问互联网

Firewall    可以任意访问所有区域，包括互联网
Lan A       可以任意访问互联网
DMZ         服务器可以任意访问互联网
Lan A       可以任意访问和管理DMZ服务器区
互联网不能随意访问内部网络和DMZ

好了，到这所有配置文件都已经配好了，然后删除 /etc/shorewall/startup_disable 文件，
用 shorewall restart 就可以启动防火墙了。

总结：

相信到现在，大家对 shorewall 的配置文档有了一定的了解了，大家可以看出shorewall 的配置是很通俗易懂的，很容易的就可以配置好，希望我写的这个文章能给大家一点帮助。
