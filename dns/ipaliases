#!/usr/bin/perl -w

# -----------------------------
# manipulate ips
# -----------------------------

use strict;

my $label   = 'default';
my $ips_cfg = '/etc/ipaliases.conf';

my $hostcfg;

foreach (slurp($ips_cfg)) {
    my ($iface) = s/^((?:br|eth|em)[\d]+):\s*// ? $1 : next;
    my $vlsm = s/(\/\d+)$// ? $1 : next;

    my @ipv4 = /^([\d]+)(?:-([\d]+))?\.
                 ([\d]+)(?:-([\d]+))?\.
                 ([\d]+)(?:-([\d]+))?\.
                 ([\d]+)(?:-([\d]+))?$
    /gx or next;

    my $i;
    while (my ($from, $to) = splice(@ipv4, 0, 2)) {
        my $ref = $to ? [$from .. $to] : [$from];
        $i = $i ? multi_array($i, $ref) : $ref;
    }

    push @{$hostcfg->{$iface}}, map {$_ . $vlsm} @$i;
}

sub multi_array {
    my ($from_array, $to_array) = @_;
    my @array;
    foreach my $to (@$to_array) {
        foreach my $from (@$from_array) {
            push @array, "$from.$to";
        }
    }
    return \@array;
}

my $action = $ARGV[0] && $ARGV[0] =~ /^(start|stop|restart)(?:all)?$/ ? $ARGV[0] : 'help';
my $iface  = $ARGV[1] || '';

$action =~ /all$/ or $iface =~ /^eth\d+$/ or help();

{
    no strict 'refs';
    &$action($iface);
}

sub start {
    my $iface = shift;

    print "starting $iface\n";

    foreach my $ipaddr ( @{$hostcfg->{$iface}} ) {
	print "setting $ipaddr\n";
        set_ip_addr('add', $iface, $ipaddr);
        set_ip_flag('up', $iface);
    }
    print "$iface started\n";
}

sub stop {
    my $iface = shift;

    print "stopping $iface\n";

    foreach my $line (reverse `ip addr show label $iface:$label`) {
        next unless $line =~ m!(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2})!;
        set_ip_addr('del', $iface, $1);
    }

    print "$iface stopped\n";
}

sub restart {
    my @args = @_;
    stop(@args);
    sleep 1;
    start(@args);
}

sub startall    { start( $_ )   foreach keys %$hostcfg }
sub stopall     { stop( $_ )    foreach keys %$hostcfg }
sub restartall  { restart( $_ ) foreach keys %$hostcfg }

sub help        { print "Usage: ipaliases [start|stop|restart|startall|stopall|restartall] [device name]\n"; exit }


sub set_ip_addr {
    my ($action, $iface, $address) = @_;
    print "ip addr $action $address dev $iface label $iface:$label\n";
    system("ip addr $action $address dev $iface label $iface:$label");
}

sub set_ip_flag { system("ip link set $_[0] $_[1]") }

sub slurp {
  my $file = $_[0];
  open my $fh, "<", $file or die "unable to open $file: $!";
  local $/ unless wantarray;
  return <$fh>;
}

